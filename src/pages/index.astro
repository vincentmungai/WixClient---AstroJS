---
import "../styles/index.css";
import FooterLayout from "../components/FooterComponent.astro";
import "../styles/WorkGrid.css";
import "../styles/page-load.css";
import NavBar from "../components/NavBar.astro";
import ThemeToggle from "../layouts/ThemeToggle.astro";
import BrandTag from "../components/BrandTag.astro";
export const prerender = false; // Ensures this page is served dynamically

import fetchArticles from '../lib/fetchArticles';

let articles = [];
try {
    articles = await fetchArticles();

} catch (error) {
    console.error('Error loading articles:', error);
}
//home layout
import fetchHomeLayout from '../lib/fetchHome';

let homeLayout = [];
try {
    homeLayout = await fetchHomeLayout();
    console.log(homeLayout[0].data.largeText);

} catch (error) {
    console.error("hey");
}
---

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta
            name="description"
            content="Explore Hunter's stunning world of photography, showcasing the beauty of Nairobi, Kenya, and beyond. Through his lens, experience the vibrant landscapes, unforgettable wildlife, and compelling moments captured meticulously by this acclaimed local photographer."
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Hunter | Home</title>
    <link rel="manifest" href="/manifest.json"/>
    <link
            rel="icon"
            type="image/svg+xml"
            href="/assets/icons/hunter-logo.svg"
    />
    <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js" defer></script>
    <script src="https://unpkg.com/lenis@1.1.13/dist/lenis.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js" defer></script>
</head>

<body>
<!-- <PageLoader/> -->
<BrandTag/>
<ThemeToggle/>
<NavBar/>
<div class="ImageGrid_wrapper">
    <div class="page-styles w-embed">
        <style>
            body {
                font-family: "Satoshi", sans-serif;
                transition: all 0.4s ease-in-out;
            }

            .cta-button-primary {
                font-weight: 400;
                font-family: "Satoshi", sans-serif;
                padding: 15px;
                transition: all 0.5s ease-out;
                background-color: white;
                color: black;
                border: 1px solid #f3f3f2;
                border-radius: 7px;
            }

            .cta-button-primary:hover {
                background-color: black;
                color: white;
                border: 1px solid black;
            }

            .description-text {
                max-width: 500px;
            }

            @media screen and (min-width: 768px) {
                [item-style="wide"] {
                    grid-column-start: span 2;
                    grid-column-end: span 2;
                    grid-row-start: span 1;
                    grid-row-end: span 1;
                }

                [item-style="tall"] {
                    grid-column-start: span 1;
                    grid-column-end: span 1;
                    grid-row-start: span 2;
                    grid-row-end: span 2;


                    .page-cta-wrapper {
                        background-repeat: no-repeat;
                        background-size: cover !important;
                    }
                }

                .w-webflow-badge {
                    display: none !important;
                }


                .page-cta-wrapper {
                    background-repeat: no-repeat;
                    height: 85vh;
                    width: 100%;
                    border-radius: 10px;
                    overflow: hidden;
                }

                .page-cta {
                    height: 100%;
                    width: 100%;
                    background: rgb(0, 0, 0);
                    background: rgba(0, 0, 0, 0.5);
                }

                .page-cta {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    flex-direction: column;
                    gap: 20px;
                }

                .project-name {
                    font-size: clamp(4rem, 0.4706rem + 11.7647vw, 8rem);
                    font-family: satoshi, sans-serif;
                    font-weight: 300;
                }

                @media only screen and (min-width: 1023px) {
                    .project-name {
                        font-size: 8rem !important;
                    }
                }

                .project-name {
                    text-align: center;
                }

                .cta-button {
                    padding: 15px;
                    border: 1px solid #f3f3f2;
                    background-color: transparent;
                    font-family: "Satoshi", sans-serif;
                    color: #f3f3f2;
                    cursor: pointer;
                    font-weight: 400;
                    font-size: 15px;
                    transition: all 0.5s ease-out;
                    border-radius: 7px;
                }


                .cta-button:hover {
                    background-color: white;
                    color: black;
                    border: 1px solid #f3f3f2;
                }

                /* Test CTA */
                body.light .project-name {
                    color: #f3f3f2;
                }

                //    lenis styles
                html.lenis, html.lenis body {
                    height: auto;
                }

                .lenis.lenis-smooth {
                    scroll-behavior: auto !important;
                }

                .lenis.lenis-smooth [data-lenis-prevent] {
                    overscroll-behavior: contain;
                }

                .lenis.lenis-stopped {
                    overflow: hidden;
                }

                .lenis.lenis-smooth iframe {
                    pointer-events: none;
                }
            }
        </style>
    </div>


    <div class="container">
        <div class="page-cta-wrapper" style="position: relative; opacity: 0;">
            <img src={homeLayout[0].data.image}
                 alt="Cover image" style="height: 100%; width: 100%; object-fit: cover;" class="cover-image">

            <!-- Overlay content -->
            <div class="page-cta"
                 style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; z-index: 1;">
                <div class="project-name" style="color: white; font-size: 3rem; text-align: center;">
                    {homeLayout[0].data.largeText}
                </div>
                <div class="cta-button-wrapper" style="margin-top: 20px; text-align: center; display: flex; gap: 4em;">
                    <button onclick="window.location.href='#gallery'" class="cta-button-primary animated-button">
                        Contact Me
                    </button>
                    <button onclick="window.location.href='#projects'" class="cta-button animated-button">
                        View Projects
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="hero_button-wrapper" style="display: none;">
        <a href="tel:+25417712699" class="hero_button-cta"
        >Contact Me&nbsp
            <svg
                    class="u_icon-arrow-2"
                    xmlns="http://www.w3.org/2000/svg"
                    width="10px"
                    height="10px"
                    viewBox="0 0 10.344 10.767"
            >
                <g
                        "Group_3"
                        data-name="Group 3"
                        transform="translate(-282.783 -1330.75)"
                >
                    <path
                            id="Path_1"
                            data-name="Path 1"
                            d="M24.93.5h9.315V9.815"
                            transform="translate(258.133 1331)"
                            fill="none"
                            stroke="currentColor"
                            stroke-miterlimit="10"
                            stroke-width="3"></path>
                    <line
                            id="Line_1"
                            data-name="Line 1"
                            x1="9.051"
                            y2="9.5"
                            transform="translate(283.326 1331.5)"
                            fill="none"
                            stroke="currentColor"
                            stroke-miterlimit="10"
                            stroke-width="3"></line>
                </g>
            </svg>
        </a>
    </div>
    <!-- Work-wrapper starts here -->
    <div class="container">
        <h1>Featured Projects</h1>
        <div class="spacer-block" style="height: 2em;"></div>
        <div class="description-text">
            Explore a curated collection of Hunter's most distinguished work. Each project is a reflection of our unique
            approach to photography, where creativity meets precision. From breathtaking landscapes to intimate
            portraits, these featured projects represent the heart of visualsbyhunter's passion for capturing life's
            most compelling moments.
        </div>
        <div class="spacer-block" style="height: 2em;"></div>
        <div class="work_wrapper w-dyn-list">
            <div role="list" class="work_list w-dyn-items">
                <!-- Hero card -->

                {
                    articles.map((article) => (

                            <div
                                    item-style="tall"
                                    role="listitem"
                                    class="work_item w-dyn-item "
                                    onclick={`window.location.href='/projects/${article.data.slug}'`}
                            >
                                <img
                                        src={article.data.url}
                                        alt="Photos by Hunter"
                                        class="work_image hero-fade"
                                />
                                <a href={`/projects/${article.data.slug}`}>
                                    <div class="work_content-wrap">
                                        <div class="work_date-wrap"/>
                                        <div class="work_title-wrap">
                                            <div class="work_title">
                                                {article.data.title}
                                            </div>
                                            <div class="work_description">
                                                {article.data.description}
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>

                    ))
                }
                <!-- Hero card -->
            </div>
        </div>
    </div>


    <!-- Work-wrapper ends here -->
</div>
<style>
    .u_icon-arrow {
        transform: rotate(135deg);
    }

    @media screen and (min-width: 768px) {
        [item-style="wide"] {
            grid-column-start: span 2;
            grid-column-end: span 2;
            grid-row-start: span 1;
            grid-row-end: span 1;
        }

        [item-style="tall"] {
            grid-column-start: span 1;
            grid-column-end: span 1;
            grid-row-start: span 2;
            grid-row-end: span 2;
        }

        [item-style="x-tall"] {
            grid-column-start: span 1;
            grid-column-end: span 1;
            grid-row-start: span 3;
            grid-row-end: span 3;
        }

        [item-style="x-wide"] {
            grid-column-start: span 3;
            grid-column-end: span 3;
            grid-row-start: span 1;
            grid-row-end: span 1;
        }
    }

    a {
        height: 100%;
    }

    .service-name {
        font-family: system-ui,
        -apple-system,
        BlinkMacSystemFont,
        "Segoe UI",
        Roboto,
        Oxygen,
        Ubuntu,
        Cantarell,
        "Open Sans",
        "Helvetica Neue",
        sans-serif;
        text-transform: uppercase;
        font-weight: bold;
    }

    .page-cta-wrapper {
        height: 80vh;
        width: 100%;
        border-radius: 10px;
        overflow: hidden;
    }

    .page-cta {
        height: 100%;
        width: 100%;
        background: rgb(0, 0, 0);
        background: rgba(0, 0, 0, 0.5);
    }


    .page-cta {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 20px;
    }

    .cta-button {
        padding: 15px;
        border: 1px solid #f3f3f2;
        background-color: transparent;
        font-family: "Satoshi", sans-serif;
        color: #f3f3f2;
        cursor: pointer;
        font-weight: 400;
        font-size: 15px;
        transition: all 0.5s ease-out;
        border-radius: 7px;
    }

    .cta-button:hover {
        background-color: white;
        color: black;
        border: 1px solid #f3f3f2;
    }


    .about-wrapper {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 2em;
    }

    @media only screen and (max-width: 480px) {
        .about-wrapper {
            flex-direction: column;
        }
    }
</style>
</div>

<div class="container" id="about">
    <h1 id="projects" style="text-align: center">About</h1>
    <div class="spacer-block" style="height: 2em;"></div>
    <div class="about-wrapper">
        <div>
            <img class="about-photographer-img"
                 src="https://dyvkdbmmzvclydrmokpq.supabase.co/storage/v1/object/public/home-about/about.webp"
                 alt="image of photographer" style="max-height: 20em; filter: grayscale(20%)">
        </div>
        <div class="description-text">
            At <i>visualsbyhunter</i>, we capture more than just moments – we craft stories through the lens, blending a
            passion for photography with an artistic vision that transforms the ordinary into the extraordinary. Hunter,
            the creative force behind the brand, sees every shot as a canvas, where light, emotion, and perspective
            converge to create timeless visual art. Whether it's the subtle beauty of nature or the dynamic energy of an
            event, Hunter's work reflects a deep commitment to capturing the world in its most captivating form.
        </div>
    </div>

</div>
<FooterLayout/>

<script src="/src/script/cta-Animation.js" defer></script>
<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {

        // Initialize Lenis with optional settings for smoother scrolling
        const lenis = new Lenis({
            lerp: 0.2,  // Adjust lerp value for smoother scrolling
            duration: 1.5,  // Adjust the scroll duration
            easing: t => Math.min(1, 1.001 - Math.pow(2, -10 * t)),  // Custom easing function
            direction: 'vertical',  // Use vertical scrolling (default)
            smooth: true,  // Enable smooth scrolling
            smoothTouch: true,  // Disable smooth scrolling on touch devices if not needed
        });

        lenis.on('scroll', (e) => {
            console.log('Scroll event:', e);  // Logging scroll event to see if it's working
        });

        function raf(time) {
            lenis.raf(time);
            requestAnimationFrame(raf);
        }

        requestAnimationFrame(raf);
    });
</script>

<script is:inline>
    document.addEventListener('DOMContentLoaded', function () {

        // Initially set the .project-name opacity to 0 and move it up by 50px
        gsap.set(".project-name", {opacity: 0, y: 100});
        gsap.set(".animated-button", {opacity: 0, y: 100});
        gsap.set(".page-cta-wrapper", {opacity: 0, scale: .9});
        // Create a timeline
        const loadTl = gsap.timeline({
            defaults: {
                duration: 1, // Default duration for each animation
                ease: "power1.out"
            }
        });
        loadTl.to(".page-cta-wrapper", {opacity: 1, scale: 1, duration: 1, delay: 1});
        // Animate the .page-cta opacity from 0 to 1 and slide it into view
        loadTl.to(".project-name", {

            opacity: 1,
            y: 0,
            duration: 1,
            ease: "power2.out"
        });
        loadTl.to(".animated-button", {
            opacity: 1,
            y: 0,
            duration: 1,
            ease: "power2.out",
            stagger: 0.2
        }, "<55%");


        loadTl.to(".cover-image", {
            scale: 1.5,
            duration: 120,
            yoyo: true,
            repeat: -1
        });

    });


    /*Modal Logic*/

    const openModal = document.querySelectorAll('.open');

    // Loop over the images and add an event listener to each one
    openModal.forEach((image, index) => {
        // Find the respective modal for each image (since modals and images are paired within each img-wrapper)
        const modal = image.closest('.img-wrapper').querySelector('.modal');
        const closeBtn = modal.querySelector('.btn-close'); // Find the close button inside the modal

        // When an image is clicked, open the modal
        image.addEventListener('click', () => {
            modal.showModal();
            modal.classList.add('showing'); // Add class to trigger animation
            document.body.classList.add('disable-scroll');

            // Listen for the Esc key press to close the modal
            document.addEventListener('keydown', (event) => {
                if (event.key === 'Escape') {
                    modal.classList.remove('showing'); // Remove animation class
                    setTimeout(() => modal.close(), 500); // Wait for animation to finish
                    document.body.classList.remove('disable-scroll');
                }
            });

            // Close modal when clicking outside the modal content
            modal.addEventListener('click', (event) => {
                const rect = modal.getBoundingClientRect();
                if (
                    event.clientX < rect.left || event.clientX > rect.right ||
                    event.clientY < rect.top || event.clientY > rect.bottom
                ) {
                    modal.classList.remove('showing'); // Remove animation class
                    setTimeout(() => modal.close(), 500); // Wait for animation to finish
                    document.body.classList.remove('disable-scroll');
                }
            });

            // Close modal when the close button is clicked
            closeBtn.addEventListener('click', () => {
                modal.classList.remove('showing');
                setTimeout(() => modal.close(), 500); // Wait for animation to finish
                document.body.classList.remove('disable-scroll');
            });
        });
    });


</script>

</body>
